// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.Srv.Model.DataContext;

#nullable disable

namespace TaskManager.Srv.Migrations
{
    [DbContext(typeof(ManagerContext))]
    [Migration("20230113143950_LastVisit")]
    partial class LastVisit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.Project", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("row_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RowId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.Property<Guid>("TechnicalName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("technical_name")
                        .HasDefaultValueSql("NEWID()");

                    b.HasKey("RowId")
                        .HasName("pk_project");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_project_name");

                    b.HasIndex("TechnicalName")
                        .IsUnique()
                        .HasDatabaseName("ix_project_technical_name");

                    b.ToTable("project", (string)null);
                });

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.ProjectUser", b =>
                {
                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("LastVisit")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_visit");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("row_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RowId"));

                    b.HasKey("ProjectId", "UserId")
                        .HasName("pk_project_user");

                    b.HasIndex("LastVisit")
                        .HasDatabaseName("ix_project_user_last_visit");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_project_user_user_id");

                    b.ToTable("project_user", (string)null);
                });

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.User", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("row_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RowId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_name");

                    b.HasKey("RowId")
                        .HasName("pk_user");

                    b.HasIndex("UserName")
                        .HasDatabaseName("ix_user_user_name");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.ProjectUser", b =>
                {
                    b.HasOne("TaskManager.Srv.Model.DataModel.Project", "Project")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_project_user_project_project_id");

                    b.HasOne("TaskManager.Srv.Model.DataModel.User", "User")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_project_user_user_user_temp_id");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.Project", b =>
                {
                    b.Navigation("ProjectUsers");
                });

            modelBuilder.Entity("TaskManager.Srv.Model.DataModel.User", b =>
                {
                    b.Navigation("ProjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
