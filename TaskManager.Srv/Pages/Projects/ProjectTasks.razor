@inject ISnackbar Snackbar

@page "/projects/{TechnicalName}/tasks"
@using TaskManager.Srv.Model.DTO
@using TaskManager.Srv.Model.ViewModel;
@using TaskManager.Srv.Model.DataModel;
@using TaskManager.Srv.Components.TaskDetails;


<CascadingValue Value="@stateFilterView" Name="FilterView">
<MudTable class="table"
            @ref="_table"
            ServerData="LoadData"
            Elevation="0"
            Hover="true"
            Virtualize="true"
            Dense="true"
            RowStyleFunc="@((item, idx) => TableRowStyle(item, idx))"
            CanCancelEdit="true"
            CommitEditTooltip="Mentés"
            CancelEditTooltip="Mégse"
            RowEditPreview="BackUpItem"
            RowEditCancel="ResetTaskToOriginal"
            RowEditCommit="UpdateTask"
            ApplyButtonPosition="TableApplyButtonPosition.Start"
            EditButtonPosition="TableEditButtonPosition.Start"
            EditTrigger="TableEditTrigger.EditButton"
            IsEditRowSwitchingBlocked="false">
    <ToolBarContent>
        <MudText class="task-title" Typo="Typo.h6">Feladatok</MudText>
        <MudSpacer/>
        <MudButton class="new-task-button" Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateTask">Új Feladat</MudButton>
    </ToolBarContent>
    <ColGroup>
        <col />
        <col />
        <col />
        <col />
        <col />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh><b>Név</b></MudTh>
        <MudTh><b>Állapot</b>
            <Filter OnClick="GetFilterData"></Filter>
        </MudTh>
        <MudTh><b>Felelős</b></MudTh>
        <MudTh><b>Prioritás</b></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
            <MudTd class="name-row">@context.Name</MudTd>
            <MudTd>
                <MudSelect T="TaskState" @bind-Value="context.State" SelectedValuesChanged="@(() => UpdateState(context))" AnchorOrigin="Origin.BottomCenter" DisableUnderLine="true" Dense="true"
                            MultiSelection="false">
                @foreach (var (value, name) in enumList)
                {
                    <MudSelectItem T="TaskState" Value="@value">@name</MudSelectItem>
                }
                </MudSelect>
            </MudTd>
            <MudTd>
                <MudAutocomplete OnAdornmentClick="@(() => UpdateUser(context))" @bind-Value="@context.ResponsiblePerson" class="user-autocomplete" T="string" Margin="Margin.Dense" AdornmentIcon="@Icons.Material.Filled.Done" AdornmentColor="Color.Primary"
                   SearchFunc="@SearchUser" Variant="Variant.Outlined"></MudAutocomplete>
            </MudTd>
            <MudTd class="priority-row">@context.Priority</MudTd>
            <MudTd class="cell">
                <MudTooltip Text="@((context.RowId == ShownId) ? "bezárás" : "részletek")">
                    <MudIconButton class="dropdown-button" id="btn" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" OnClick="@(() => ShowBtnPress(context))"
                                   Icon="@((context.RowId == ShownId) ? Icons.Material.Filled.ExpandLess : Icons.Material.Filled.ExpandMore)">
                    </MudIconButton>
                </MudTooltip>
            </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
            <MudTd class="name-row" DataLabel="Name">
                <!-- Class not supported on edittemplate -->
                <MudTextField Style="font-size: 14px;" @bind-Value="@context.Name" Immediate="true" Variant="Variant.Outlined" Margin="Margin.Dense" Required></MudTextField>
            </MudTd>
        <MudTd class="select-row">
            <MudSelect T="TaskState" @bind-Value="context.State" SelectedValuesChanged="@(() => UpdateState(context))" AnchorOrigin="Origin.BottomCenter" DisableUnderLine="true" Dense="true"
                       AdornmentColor="Color.Primary" MultiSelection="false">
                @foreach (var (value, name) in enumList)
                {
                    <MudSelectItem T="TaskState" Value="@value">@name</MudSelectItem>
                }
            </MudSelect>
        </MudTd>
            <MudTd>
                <MudAutocomplete OnAdornmentClick="@(() => UpdateUser(context))" @bind-Value="@context.ResponsiblePerson" class="user-autocomplete" T="string" Margin="Margin.Dense" AdornmentIcon="@Icons.Material.Filled.Done" AdornmentColor="Color.Primary"
                    SearchFunc="@SearchUser" Variant="Variant.Outlined"></MudAutocomplete>
            </MudTd>
        <MudTd DataLabel="Priority">
                <!-- Class not supported on edittemplate -->
                <MudNumericField Style="font-size: 14px;" @bind-Value="@context.Priority" Variant="Variant.Outlined" Margin="Margin.Dense" Max="5" Min="1" Required></MudNumericField>
        </MudTd>
        <MudTd class="cell">
        </MudTd>
    </RowEditingTemplate>
    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Color="Color.Primary" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
    </EditButtonContent>
    <ChildRowContent>
        @if (context.RowId == ShownId)
        {
            <CascadingValue Value="@Id" Name="TaskId">
                <Details></Details>
            </CascadingValue>
        }
    </ChildRowContent>
</MudTable>
</CascadingValue>